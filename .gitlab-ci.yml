image: node:latest

stages:
  - lint
  - build
  - deploy

eslint:
  stage: lint
  script:
    # Install ESLint in this docker container
    - npm install -D eslint
    - npm install eslint-plugin-react@latest --save-dev
    # Configure ESLint (will read your .eslintrc file)
    - eslint --init
    # Run ESLint
    - npm run lint

build_app:
  stage: build
  script:
    - export REACT_APP_SECRET_API_KEY=$REACT_APP_API_KEY
    - export REACT_APP_AUTH_DOMAIN=$REACT_APP_AUTH_DOMAIN
    - export REACT_APP_AUTH_PROJECT_ID=$REACT_APP_AUTH_PROJECT_ID
    - export REACT_APP_STORAGE_BUCKET=$REACT_APP_STORAGE_BUCKET
    - export REACT_APP_MESSAGING_SENDER_ID=$REACT_APP_MESSAGING_SENDER_ID
    - export REACT_APP_APP_ID=$REACT_APP_APP_ID
    - export REACT_APP_MEASUREMENT_ID=$REACT_APP_MEASUREMENT_ID
    - npm install
    - npm run build
  artifacts:
    name: "$CI_PIPELINE_ID"
    paths:
      - build
    when: on_success

deploy_production:
  stage: deploy
  environment: Production
  script:
    - npm install -g firebase-tools
    - firebase use --token $FIREBASE_DEPLOY_KEY production
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --only hosting